var search_data = {"index":{"searchIndex":["activerecord","acts","versioned","behaviors","classmethods","instancemethods","acts_as_versioned()","after()","altered?()","before()","clear_old_versions()","clone_versioned_model()","create_versioned_table()","drop_versioned_table()","earliest()","empty_callback()","latest()","next()","previous()","reloadable?()","revert_to()","revert_to!()","save_version()","save_version?()","save_without_revision()","save_without_revision!()","version_condition_met?()","versioned_class()","versioned_columns()","versions_count()","without_locking()","without_locking()","without_revision()","without_revision()","changelog","mit-license","readme"],"longSearchIndex":["activerecord","activerecord::acts","activerecord::acts::versioned","activerecord::acts::versioned::behaviors","activerecord::acts::versioned::behaviors::classmethods","activerecord::acts::versioned::behaviors::instancemethods","activerecord::acts::versioned#acts_as_versioned()","activerecord::acts::versioned::after()","activerecord::acts::versioned::behaviors::instancemethods#altered?()","activerecord::acts::versioned::before()","activerecord::acts::versioned::behaviors::instancemethods#clear_old_versions()","activerecord::acts::versioned::behaviors::instancemethods#clone_versioned_model()","activerecord::acts::versioned::behaviors::classmethods#create_versioned_table()","activerecord::acts::versioned::behaviors::classmethods#drop_versioned_table()","activerecord::acts::versioned::earliest()","activerecord::acts::versioned::behaviors::instancemethods#empty_callback()","activerecord::acts::versioned::latest()","activerecord::acts::versioned#next()","activerecord::acts::versioned#previous()","activerecord::acts::versioned::reloadable?()","activerecord::acts::versioned::behaviors::instancemethods#revert_to()","activerecord::acts::versioned::behaviors::instancemethods#revert_to!()","activerecord::acts::versioned::behaviors::instancemethods#save_version()","activerecord::acts::versioned::behaviors::instancemethods#save_version?()","activerecord::acts::versioned::behaviors::instancemethods#save_without_revision()","activerecord::acts::versioned::behaviors::instancemethods#save_without_revision!()","activerecord::acts::versioned::behaviors::instancemethods#version_condition_met?()","activerecord::acts::versioned::behaviors::classmethods#versioned_class()","activerecord::acts::versioned::behaviors::classmethods#versioned_columns()","activerecord::acts::versioned#versions_count()","activerecord::acts::versioned::behaviors::classmethods#without_locking()","activerecord::acts::versioned::behaviors::instancemethods#without_locking()","activerecord::acts::versioned::behaviors::classmethods#without_revision()","activerecord::acts::versioned::behaviors::instancemethods#without_revision()","","",""],"info":[["ActiveRecord","","ActiveRecord.html","",""],["ActiveRecord::Acts","","ActiveRecord/Acts.html","",""],["ActiveRecord::Acts::Versioned","","ActiveRecord/Acts/Versioned.html","","<p>Specify this act if you want to save a copy of the row in a versioned\ntable.  This assumes there is a …\n"],["ActiveRecord::Acts::Versioned::Behaviors","","ActiveRecord/Acts/Versioned/Behaviors.html","",""],["ActiveRecord::Acts::Versioned::Behaviors::ClassMethods","","ActiveRecord/Acts/Versioned/Behaviors/ClassMethods.html","",""],["ActiveRecord::Acts::Versioned::Behaviors::InstanceMethods","","ActiveRecord/Acts/Versioned/Behaviors/InstanceMethods.html","",""],["acts_as_versioned","ActiveRecord::Acts::Versioned","ActiveRecord/Acts/Versioned.html#method-i-acts_as_versioned","(options = {}, &extension)","<p>Configuration options\n<p><code>class_name</code> - versioned model class name (default: PageVersion\nin the above example) …\n"],["after","ActiveRecord::Acts::Versioned","ActiveRecord/Acts/Versioned.html#method-c-after","(version)","<p>find first version after the given version.\n"],["altered?","ActiveRecord::Acts::Versioned::Behaviors::InstanceMethods","ActiveRecord/Acts/Versioned/Behaviors/InstanceMethods.html#method-i-altered-3F","()",""],["before","ActiveRecord::Acts::Versioned","ActiveRecord/Acts/Versioned.html#method-c-before","(version)","<p>find first version before the given version\n"],["clear_old_versions","ActiveRecord::Acts::Versioned::Behaviors::InstanceMethods","ActiveRecord/Acts/Versioned/Behaviors/InstanceMethods.html#method-i-clear_old_versions","()","<p>Clears old revisions if a limit is set with the :limit option in\n<code>acts_as_versioned</code>. Override this method …\n"],["clone_versioned_model","ActiveRecord::Acts::Versioned::Behaviors::InstanceMethods","ActiveRecord/Acts/Versioned/Behaviors/InstanceMethods.html#method-i-clone_versioned_model","(orig_model, new_model)","<p>Clones a model.  Used when saving a new version or reverting a model’s\nversion.\n"],["create_versioned_table","ActiveRecord::Acts::Versioned::Behaviors::ClassMethods","ActiveRecord/Acts/Versioned/Behaviors/ClassMethods.html#method-i-create_versioned_table","(create_table_options = {})","<p>Rake migration task to create the versioned table using options passed to\nacts_as_versioned\n"],["drop_versioned_table","ActiveRecord::Acts::Versioned::Behaviors::ClassMethods","ActiveRecord/Acts/Versioned/Behaviors/ClassMethods.html#method-i-drop_versioned_table","()","<p>Rake migration task to drop the versioned table\n"],["earliest","ActiveRecord::Acts::Versioned","ActiveRecord/Acts/Versioned.html#method-c-earliest","()","<p>finds earliest version of this record\n"],["empty_callback","ActiveRecord::Acts::Versioned::Behaviors::InstanceMethods","ActiveRecord/Acts/Versioned/Behaviors/InstanceMethods.html#method-i-empty_callback","()",""],["latest","ActiveRecord::Acts::Versioned","ActiveRecord/Acts/Versioned.html#method-c-latest","()","<p>find latest version of this record\n"],["next","ActiveRecord::Acts::Versioned","ActiveRecord/Acts/Versioned.html#method-i-next","()",""],["previous","ActiveRecord::Acts::Versioned","ActiveRecord/Acts/Versioned.html#method-i-previous","()",""],["reloadable?","ActiveRecord::Acts::Versioned","ActiveRecord/Acts/Versioned.html#method-c-reloadable-3F","()",""],["revert_to","ActiveRecord::Acts::Versioned::Behaviors::InstanceMethods","ActiveRecord/Acts/Versioned/Behaviors/InstanceMethods.html#method-i-revert_to","(version)","<p>Reverts a model to a given version.  Takes either a version number or an\ninstance of the versioned model …\n"],["revert_to!","ActiveRecord::Acts::Versioned::Behaviors::InstanceMethods","ActiveRecord/Acts/Versioned/Behaviors/InstanceMethods.html#method-i-revert_to-21","(version)","<p>Reverts a model to a given version and saves the model. Takes either a\nversion number or an instance …\n"],["save_version","ActiveRecord::Acts::Versioned::Behaviors::InstanceMethods","ActiveRecord/Acts/Versioned/Behaviors/InstanceMethods.html#method-i-save_version","()","<p>Saves a version of the model in the versioned table.  This is called in the\nafter_save callback by default …\n"],["save_version?","ActiveRecord::Acts::Versioned::Behaviors::InstanceMethods","ActiveRecord/Acts/Versioned/Behaviors/InstanceMethods.html#method-i-save_version-3F","()","<p>Checks whether a new version shall be saved or not.  Calls\n<code>version_condition_met?</code> and <code>changed?</code>.\n"],["save_without_revision","ActiveRecord::Acts::Versioned::Behaviors::InstanceMethods","ActiveRecord/Acts/Versioned/Behaviors/InstanceMethods.html#method-i-save_without_revision","()","<p>Temporarily turns off Optimistic Locking while saving.  Used when reverting\nso that a new version is …\n"],["save_without_revision!","ActiveRecord::Acts::Versioned::Behaviors::InstanceMethods","ActiveRecord/Acts/Versioned/Behaviors/InstanceMethods.html#method-i-save_without_revision-21","()",""],["version_condition_met?","ActiveRecord::Acts::Versioned::Behaviors::InstanceMethods","ActiveRecord/Acts/Versioned/Behaviors/InstanceMethods.html#method-i-version_condition_met-3F","()","<p>Checks condition set in the :if option to check whether a revision should\nbe created or not.  Override …\n"],["versioned_class","ActiveRecord::Acts::Versioned::Behaviors::ClassMethods","ActiveRecord/Acts/Versioned/Behaviors/ClassMethods.html#method-i-versioned_class","()","<p>Returns an instance of the dynamic versioned model\n"],["versioned_columns","ActiveRecord::Acts::Versioned::Behaviors::ClassMethods","ActiveRecord/Acts/Versioned/Behaviors/ClassMethods.html#method-i-versioned_columns","()","<p>Returns an array of columns that are versioned.  See non_versioned_columns\n"],["versions_count","ActiveRecord::Acts::Versioned","ActiveRecord/Acts/Versioned.html#method-i-versions_count","()",""],["without_locking","ActiveRecord::Acts::Versioned::Behaviors::ClassMethods","ActiveRecord/Acts/Versioned/Behaviors/ClassMethods.html#method-i-without_locking","(&block)","<p>Turns off optimistic locking for the duration of the block\n\n<pre>Foo.without_locking do\n  @foo.save\nend</pre>\n"],["without_locking","ActiveRecord::Acts::Versioned::Behaviors::InstanceMethods","ActiveRecord/Acts/Versioned/Behaviors/InstanceMethods.html#method-i-without_locking","(&block)","<p>Turns off optimistic locking for the duration of the block\n\n<pre>@foo.without_locking do\n  @foo.save\nend</pre>\n"],["without_revision","ActiveRecord::Acts::Versioned::Behaviors::ClassMethods","ActiveRecord/Acts/Versioned/Behaviors/ClassMethods.html#method-i-without_revision","(&block)","<p>Executes the block with the versioning callbacks disabled.\n\n<pre>Foo.without_revision do\n  @foo.save\nend</pre>\n"],["without_revision","ActiveRecord::Acts::Versioned::Behaviors::InstanceMethods","ActiveRecord/Acts/Versioned/Behaviors/InstanceMethods.html#method-i-without_revision","(&block)","<p>Executes the block with the versioning callbacks disabled.\n\n<pre>@foo.without_revision do\n  @foo.save\nend</pre>\n"],["CHANGELOG","","CHANGELOG.html","","<p><strong>GIT</strong> (version numbers are overrated)\n<p>(16 Jun 2008) Backwards Compatibility is overrated (big updates for …\n"],["MIT-LICENSE","","MIT-LICENSE.html","","<p>Copyright © 2005 Rick Olson\n<p>Permission is hereby granted, free of charge, to any person obtaining a …\n"],["README","","README.html","","<p>acts_as_versioned\n<p>This library adds simple versioning to an ActiveRecord module. \nActiveRecord is required. …\n"]]}}